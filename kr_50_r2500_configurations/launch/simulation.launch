<?xml version="1.0"?>
<launch>
<arg name="fake" default="true"/>
<arg name="use_rviz" default="true" />
<arg name="debug" default="false" />
<arg name="pipeline" default="dirrt" />
<arg name="gazebo" default="false" />

<arg unless="$(arg debug)" name="launch_prefix" value="" />
<arg     if="$(arg debug)" name="launch_prefix"
 value="gdb --ex run --args" />

<!-- load URDF&co -->
 <include file="$(find kr_50_r2500_moveit_config)/launch/planning_context.launch">
   <arg name="load_robot_description" value="true"/>
 <!--  <arg name="load_gripper" value="true"/> -->
 </include>


 <!-- the controller does not manage the hand, use a joint_state_publisher to handle it -->
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  <param name="/use_gui" value="false"/>
  <param name="rate" value="500"/>
  <rosparam param="/source_list">[/kr_50_r2500/joint_states]</rosparam>
</node>

  <!-- in high_dof_6_moveit_config package the joint_states is remapped to joint_states_desired -->
<node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />
<node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world a_mount_flange" />
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

<node pkg="object_loader" name="context_manager_node" type="context_manager_node" respawn="true" output="screen"/>

<!-- load moveit -->
<include file="$(find kr_50_r2500_moveit_config)/launch/move_group.launch">
  <arg name="allow_trajectory_execution" value="true"/>
  <arg name="fake_execution_type" value="false"/>
  <arg name="info" value="true"/>
  <arg name="debug" value="$(arg debug)"/>
  <arg name="pipeline" value="$(arg pipeline)"/>
</include>

<!-- load rviz -->
<include file="$(find kr_50_r2500_configurations)/launch/rviz.launch" if="$(arg use_rviz)">
  <arg name="rviz_config" value="$(find kr_50_r2500_configurations)/launch/control.rviz"/>
  <arg name="debug" value="$(arg debug)"/>
</include>

<!-- Load CNR_ROS_CONTROL -->
<!--Load robot hardware-->
<rosparam if     = "$(arg gazebo)" command="load" file="$(find kr_50_r2500_configurations)/config/level0_gazebo_hw.yaml" />
<rosparam unless = "$(arg gazebo)" command="load" file="$(find kr_50_r2500_configurations)/config/level0_hw.yaml" />

<rosparam command="load" file="$(find kr_50_r2500_configurations)/config/level1_hw.yaml" />

<!--Load controllers-->
<rosparam command="load" file="$(find kr_50_r2500_configurations)/config/level0_controllers.yaml" />
<rosparam command="load" file="$(find kr_50_r2500_configurations)/config/level1_controllers.yaml" />

<node launch-prefix="$(arg launch_prefix)"
      pkg="cnr_configuration_manager"
      type="cnr_configuration_manager_node"
      name="configuration_manager" output="screen">

  <rosparam>
    appenders: [screen,file]
    levels: [info,info]
    file_name: "controller_manager"
    append_to_file: true
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%04L][%c] %m%n"
  </rosparam>

  <!--Load configurations-->
  <rosparam command="load" file="$(find kr_50_r2500_configurations)/config/controllers_configurations.yaml" />
</node>


<node pkg="cnr_configuration_manager" type="dispatcher" name="configuration_dispatcher" output="screen" >
<rosparam>
  appenders: [screen,file]
  levels: [info,file]
  file_name: "configuration_dispatcher"
  pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%04L][%c] %m%n"
</rosparam>
  <param name="num_worker_threads" value="40" />
  <!-- Load dispatches -->
  <rosparam command="load" file="$(find kr_50_r2500_configurations)/config/controllers_dispatches.yaml" />
</node>



</launch>
